---
import { getCollection, z } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import AnilistComment from "../components/AnilistComment.astro";
import type { ChallengeEntry } from "../models";
import StatusBadge from "../components/StatusBadge.astro";

interface Props {
  challenge: ChallengeEntry;
}

export async function getStaticPaths() {
  const challenges = await getCollection("challenge");

  return challenges.map((challenge) => ({
    params: {
      slug: challenge.id,
    },
    props: {
      challenge,
    },
  }));
}

const { challenge } = Astro.props;
---

<BaseLayout>
  {
    Array.isArray(challenge.data.badge) && (
      <>
        <h1 class="my-4 text-5xl">{challenge.data.name}</h1>

        <div class="flex flex-row justify-around text-center">
          {challenge.data.badge.map((badge) => (
            <div class="space-y-2">
              <img src={badge.image} alt={challenge.data.name} class="h-60" />

              <div class="text-lg font-bold">{badge.name}</div>

              <StatusBadge status={badge.status} />

              <div>
                <span>Started: </span>
                {badge.started.toLocaleDateString()}
              </div>

              <div>
                <span>Completed: </span>
                {badge.completed?.toLocaleDateString() ?? "Not completed"}
              </div>
            </div>
          ))}
        </div>
      </>
    )
  }

  {
    !Array.isArray(challenge.data.badge) && (
      <img src={challenge.data.badge.image} alt={challenge.data.name} />
    )
  }

  <a href={challenge.data.url.full} target="_blank">
    <h2 class="duration-250 hover:casual my-4 text-4xl transition-all">
      Challenge Post
    </h2>
  </a>

  <AnilistComment commentId={challenge.data.url.comment} />

  <a
    href={challenge.data.url.full}
    class="mx-auto inline-block rounded bg-ctp-lavender p-2 text-sm font-bold uppercase text-ctp-base"
    target="_blank"
  >
    View on Anilist</a
  >
</BaseLayout>
