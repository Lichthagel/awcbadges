---
import type { ChallengeEntry } from "../models";
import { getEntry } from "astro:content";
import BadgeComponent from "./BadgeComponent.astro";

type Props = {
  challenge: Omit<ChallengeEntry, "data">;
};

const challenge = await getEntry(Astro.props.challenge);

if (!challenge) {
  throw new Error("Challenge not found");
}

const show = (() => {
  if (Array.isArray(challenge.data.badge)) {
    return (
      challenge.data.badge.find((badge) => badge.status !== "incomplete") !==
      undefined
    );
  } else {
    return challenge.data.badge.status !== "incomplete";
  }
})();
---

{
  show &&
  // <a href={`/${challenge.id}`}>
    (Array.isArray(challenge.data.badge) &&
    challenge.data.visibility !== "only-focus" ? (
      <div class="m-1 mt-6 inline-block rounded bg-ctp-mantle p-1 shadow">
        {challenge.data.badge.map((badge) => (
          <a
            href={badge.url?.full ?? challenge.data.url.full}
            target="_blank"
            rel="noopener noreferrer"
          >
            <BadgeComponent
              badge={badge}
              name={badge.name}
              size={
                badge.focus || challenge.data.visibility === "all"
                  ? "large"
                  : "small"
              }
            />
          </a>
        ))}

        <h4 class="ml-auto mr-1 w-max font-light uppercase">
          {challenge.data.name}
        </h4>
      </div>
    ) : (
      <div class="mb-1 mt-6 inline-block rounded py-1">
        <a
          href={challenge.data.url.full}
          target="_blank"
          rel="noopener noreferrer"
        >
          <BadgeComponent
            badge={
              Array.isArray(challenge.data.badge)
              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                ? challenge.data.badge.find((badge) => badge.focus)!
                : challenge.data.badge
            }
            name={challenge.data.name}
            size="large"
          />

          <h4 class="font-light uppercase">{challenge.data.name}</h4>
        </a>
      </div>
    ))
}
